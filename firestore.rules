rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read and write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read and write debates
    match /debates/{debateId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read and write queue entries
    match /queue/{queueId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read and write practice sessions
    match /practice/{practiceId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read and write user stats
    match /userStats/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read and write achievements
    match /achievements/{achievementId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read and write leaderboard data
    match /leaderboard/{entryId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Notifications collection
    match /notifications/{notificationId} {
      // Users can only read their own notifications
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Allow system/admin to create notifications
      allow create: if request.auth != null;
      
      // Users can update their own notifications (mark as read, delete)
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // Challenges collection
    match /challenges/{challengeId} {
      // Allow read if user is the challenger or one of the challenged users
      allow read: if request.auth != null && 
        (resource.data.fromUserId == request.auth.uid || 
         request.auth.uid in resource.data.toUserIds);
      
      // Only authenticated users can create challenges where they are the fromUser
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.fromUserId;
      
      // Users can update challenges they created or were challenged to (for accepting/declining)
      allow update: if request.auth != null && 
        (resource.data.fromUserId == request.auth.uid || 
         request.auth.uid in resource.data.toUserIds);
      
      // Only the challenger can delete their challenges
      allow delete: if request.auth != null && 
        resource.data.fromUserId == request.auth.uid;
    }

    // Deny all other operations
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 